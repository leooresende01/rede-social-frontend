{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Maria S\\xF4nia/Documents/Workspace-Node/rede-social/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { urlApi } from '../util/url-api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/core/service/user-authenticate.service\";\nexport class LoginService {\n  constructor(http, userAuthService) {\n    this.http = http;\n    this.userAuthService = userAuthService;\n    this.loginPath = \"/api/v1/login\";\n  }\n\n  autenticarUsuario(loginForm) {\n    return this.http.post(`${urlApi}${this.loginPath}`, loginForm);\n  }\n\n  atualizarToken() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const refreshToken = _this.userAuthService.pegarRefreshToken();\n\n      return new Promise((resolve, reject) => {\n        _this.http.post(`${urlApi}${_this.loginPath}/atualizarToken`, refreshToken).subscribe({\n          next: data => resolve(data),\n          error: err => reject(err)\n        });\n      });\n    })();\n  }\n\n}\n\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserAuthenticateService));\n};\n\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,SAASA,MAAT,QAAuB,iBAAvB;;;;AAGA,OAAM,MAAOC,YAAP,CAAmB;EAGxBC,YAAoBC,IAApB,EAA8CC,eAA9C,EAAsF;IAAlE;IAA0B;IAF7B,iBAAoB,eAApB;EAE0E;;EAE3FC,iBAAiB,CAACC,SAAD,EAAqB;IACrC,OAAO,KAAKH,IAAL,CAAUI,IAAV,CAAyB,GAAGP,MAAM,GAAG,KAAKQ,SAAS,EAAnD,EAAuDF,SAAvD,CAAP;EACA;;EAEKG,cAAc;IAAA;;IAAA;MACnB,MAAMC,YAAY,GAAG,KAAI,CAACN,eAAL,CAAqBO,iBAArB,EAArB;;MACA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;QACtC,KAAI,CAACX,IAAL,CAAUI,IAAV,CAAyB,GAAGP,MAAM,GAAG,KAAI,CAACQ,SAAS,iBAAnD,EAAsEE,YAAtE,EACGK,SADH,CACa;UACZC,IAAI,EAAGC,IAAD,IAAUJ,OAAO,CAACI,IAAD,CADX;UAEZC,KAAK,EAAGC,GAAD,IAASL,MAAM,CAACK,GAAD;QAFV,CADb;MAKE,CANI,CAAP;IAFmB;EASnB;;AAlBuB;;;mBAAZlB,cAAYmB;AAAA;;;SAAZnB;EAAYoB,SAAZpB,YAAY;EAAAqB,YADC","names":["urlApi","LoginService","constructor","http","userAuthService","autenticarUsuario","loginForm","post","loginPath","atualizarToken","refreshToken","pegarRefreshToken","Promise","resolve","reject","subscribe","next","data","error","err","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Maria Sônia\\Documents\\Workspace-Node\\rede-social\\src\\core\\service\\login.service.ts"],"sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport { UserAuthenticateService } from 'src/core/service/user-authenticate.service';\r\nimport { LoginForm } from './../dto/login-form';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { LoginDto } from './../dto/login-dto';\r\nimport { urlApi } from '../util/url-api';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n\tprivate readonly loginPath: string = \"/api/v1/login\";\r\n\t\r\n\tconstructor(private http: HttpClient, private userAuthService: UserAuthenticateService) { }\r\n\t\r\n\tautenticarUsuario(loginForm: LoginForm): Observable<LoginDto> {\r\n\t\treturn this.http.post<LoginDto>(`${urlApi}${this.loginPath}`, loginForm);\r\n\t}\r\n\r\n\tasync atualizarToken(): Promise<LoginDto> {\r\n\t\tconst refreshToken = this.userAuthService.pegarRefreshToken();\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.http.post<LoginDto>(`${urlApi}${this.loginPath}/atualizarToken`, refreshToken)\r\n\t\t\t  .subscribe({\r\n\t\t\t\tnext: (data) => resolve(data),\r\n\t\t\t\terror: (err) => reject(err),\r\n\t\t\t  });\r\n\t\t  });\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}