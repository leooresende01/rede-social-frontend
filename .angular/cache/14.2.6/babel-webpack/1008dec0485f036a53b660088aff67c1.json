{"ast":null,"code":"import { UsuarioUtil } from './../util/usuario.util';\nimport { HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { urlApi } from '../util/url-api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user-authenticate.service\";\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    constructor(http, userAuthenticateService) {\n      this.http = http;\n      this.userAuthenticateService = userAuthenticateService;\n      this.pathApi = \"/api/v1/usuarios\";\n      this.quantidadeDeUsuarioBuscado = 8;\n    }\n\n    registrarUsuario(registroForm) {\n      const formData = UsuarioUtil.pegarFormData(registroForm);\n      return this.http.post(`${urlApi}${this.pathApi}`, formData, {\n        reportProgress: true,\n        observe: 'events'\n      });\n    }\n\n    autalizarInformacoesUsuario(atualizarUsuarioDto) {\n      const usernameUsuarioAutenticado = this.userAuthenticateService.pegarUsernameUsuarioAutenticado();\n      const formData = UsuarioUtil.pegarFormDataAtualizacaoDeInformacoes(atualizarUsuarioDto);\n      return this.http.put(`${urlApi}${this.pathApi}/${usernameUsuarioAutenticado}`, formData);\n    }\n\n    buscarUsuarioPeloUsername(username) {\n      return this.http.get(`${urlApi}${this.pathApi}/${username}`);\n    }\n\n    buscarUsuarioPorRegex(value) {\n      const params = new HttpParams().set('quantidade', this.quantidadeDeUsuarioBuscado);\n      return this.http.get(`${urlApi}${this.pathApi}/regex/${value}`, {\n        params\n      });\n    }\n\n  }\n\n  UsuarioService.ɵfac = function UsuarioService_Factory(t) {\n    return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserAuthenticateService));\n  };\n\n  UsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioService,\n    factory: UsuarioService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioService;\n})();","map":null,"metadata":{},"sourceType":"module"}