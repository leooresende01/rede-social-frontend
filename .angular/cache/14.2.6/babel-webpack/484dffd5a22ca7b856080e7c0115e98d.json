{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { retryWhen, Subscription, delayWhen, timer } from 'rxjs';\nimport { urlApi } from 'src/core/util/url-api';\nimport { UsuarioUtil } from 'src/core/util/usuario.util';\nimport { SeguidoresSeguindoUtil } from './../../../../core/util/seguidores-seguindo.util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/core/service/user-authenticate.service\";\nimport * as i3 from \"src/core/service/mensagem.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../shared/spinner-loading/spinner-loading.component\";\nimport * as i7 from \"./mensagens/mensagens.component\";\nconst _c0 = [\"chatArea\"];\n\nfunction ChatMensagemComponent_h3_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 17);\n    i0.ɵɵtext(1, \"Envie uma mensagem\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChatMensagemComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"rs-mensagens\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mensagem_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"usuarioAuthenticadoUsername\", ctx_r2.usuarioAuthenticadoUsername)(\"mensagem\", mensagem_r3);\n  }\n}\n\nconst _c1 = function () {\n  return [\"/home\", \"chats\"];\n};\n\nconst _c2 = function (a1) {\n  return [\"/home\", a1];\n};\n\nexport let ChatMensagemComponent = /*#__PURE__*/(() => {\n  class ChatMensagemComponent {\n    constructor(activateRouter, userAuthService, mensagemService, formBuilder) {\n      this.activateRouter = activateRouter;\n      this.userAuthService = userAuthService;\n      this.mensagemService = mensagemService;\n      this.formBuilder = formBuilder;\n      this.urlApi = urlApi;\n    }\n\n    ngOnInit() {\n      this.usuarioAuthenticadoUsername = this.userAuthService.pegarUsernameUsuarioAutenticado();\n      this.pegarParametroDaUrlEBuscarMensagensDoChat();\n      this.formGroup = this.formBuilder.group({\n        mensagem: ['', [Validators.required, Validators.maxLength(1000), Validators.pattern(/[^\\s]/)]]\n      });\n      this.mensagemSubscription = this.mensagemService.escutarMensagensDoServidor().subscribe(mensagem => this.mensagens?.push(mensagem) && this.scrollToBottom(), e => alert(e));\n      this.desconnectionSubscription = this.mensagemService.desconnectEvent().subscribe(e => this.esperarAReconexaoEBuscarNovasMensagens());\n    }\n\n    esperarAReconexaoEBuscarNovasMensagens() {\n      if (this.mensagens) {\n        this.mensagens = undefined;\n      }\n\n      if (!this.mensagens) {\n        this.reconexaoSubscription = this.mensagemService.buscarMensagensComOUsuario(this.outroUsuarioDoChat).pipe(retryWhen(delayWhen(val => timer(5000)))).subscribe(mensagens => {\n          this.mensagens = mensagens;\n          this.scrollToBottom();\n        });\n        return;\n      }\n    }\n\n    pegarParametroDaUrlEBuscarMensagensDoChat() {\n      this.paramsUrlSubscription = this.activateRouter.params.subscribe(params => {\n        this.outroUsuarioDoChat = params['username'];\n        this.buscarMensagensDoChat(this.outroUsuarioDoChat);\n      });\n    }\n\n    buscarMensagensDoChat(username) {\n      this.mensagensChatSubscription = this.mensagemService.buscarMensagensComOUsuario(username).subscribe(mensagens => {\n        this.mensagens = mensagens;\n        this.scrollToBottom();\n      }, err => this.mensagens = new Array());\n    }\n\n    enviarMensagem() {\n      setTimeout(() => window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      }), 100);\n      const mensagem = this.formGroup.get('mensagem')?.value;\n      const mensagemDto = this.mensagemService.enviarMensagem(mensagem, this.outroUsuarioDoChat);\n      this.mensagens?.push(mensagemDto);\n      this.mensagens = this.mensagens;\n      this.formGroup.reset();\n      this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n      try {\n        setTimeout(() => this.chatMensagensArea.nativeElement.scrollTop = this.chatMensagensArea.nativeElement.scrollHeight, 200);\n      } catch (err) {}\n    }\n\n    errorImage(event) {\n      UsuarioUtil.definirImagemDefault(event);\n    }\n\n    ngOnDestroy() {\n      SeguidoresSeguindoUtil.desativarObservable(this.mensagensChatSubscription, this.mensagemSubscription, this.paramsUrlSubscription, this.desconnectionSubscription, this.reconexaoSubscription);\n    }\n\n  }\n\n  ChatMensagemComponent.ɵfac = function ChatMensagemComponent_Factory(t) {\n    return new (t || ChatMensagemComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserAuthenticateService), i0.ɵɵdirectiveInject(i3.MensagemService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n\n  ChatMensagemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatMensagemComponent,\n    selectors: [[\"ng-component\"]],\n    viewQuery: function ChatMensagemComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatMensagensArea = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 14,\n    consts: [[1, \"card-chat\"], [1, \"chat-com-usuarios\"], [1, \"card-topo\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"routerLink\"], [1, \"d-flex\", \"align-items-center\", \"py-1\", \"info-usuario-chat\"], [\"width\", \"40\", \"height\", \"40\", 1, \"rounded-circle\", \"mr-1\", 3, \"src\", \"error\"], [1, \"flex-grow-1\", \"pl-3\", \"text-start\"], [1, \"btn\", \"btn-light\", \"border\", \"btn-lg\", \"px-3\", 3, \"routerLink\"], [1, \"chats\", \"position-relative\"], [\"chatArea\", \"\"], [1, \"position-absolute\", \"start-0\", \"end-0\", \"top-40\", 3, \"elementoAguardado\"], [\"class\", \"text-center position-absolute top-50 start-0 end-0\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex-grow-0\", \"border-top\", \"enviar-mensagens\"], [1, \"input-group\", 3, \"formGroup\", \"submit\"], [\"formControlName\", \"mensagem\", \"type\", \"text\", \"placeholder\", \"Digite uma mensagem\", 1, \"form-control\", \"texto-input\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-center\", \"position-absolute\", \"top-50\", \"start-0\", \"end-0\"], [3, \"usuarioAuthenticadoUsername\", \"mensagem\"]],\n    template: function ChatMensagemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"button\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\")(6, \"img\", 5);\n        i0.ɵɵlistener(\"error\", function ChatMensagemComponent_Template_img_error_6_listener($event) {\n          return ctx.errorImage($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"strong\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"button\", 7);\n        i0.ɵɵtext(12, \"Ver perfil\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(13, \"div\", 8, 9);\n        i0.ɵɵelement(15, \"rs-spinnerloading\", 10);\n        i0.ɵɵtemplate(16, ChatMensagemComponent_h3_16_Template, 2, 0, \"h3\", 11);\n        i0.ɵɵtemplate(17, ChatMensagemComponent_div_17_Template, 2, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"form\", 14);\n        i0.ɵɵlistener(\"submit\", function ChatMensagemComponent_Template_form_submit_19_listener() {\n          return ctx.enviarMensagem();\n        });\n        i0.ɵɵelement(20, \"input\", 15);\n        i0.ɵɵelementStart(21, \"button\", 16);\n        i0.ɵɵtext(22, \"Enviar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c1));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx.urlApi, \"/api/v1/usuarios/\", ctx.outroUsuarioDoChat, \"/imagemDoPerfil\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵattribute(\"alt\", ctx.outroUsuarioDoChat);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.outroUsuarioDoChat);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(12, _c2, ctx.outroUsuarioDoChat));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"elementoAguardado\", ctx.mensagens);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mensagens && !(ctx.mensagens == null ? null : ctx.mensagens.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.mensagens);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.formGroup.invalid || !ctx.mensagens);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.RouterLink, i6.SpinnerLoadingComponent, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i7.MensagensComponent],\n    styles: [\".card-chat[_ngcontent-%COMP%]{padding:30px 30vw}.card-topo[_ngcontent-%COMP%]{padding:10px;display:flex;align-items:center;border-bottom:1px solid var(--cor-de-fundo)}.card-topo[_ngcontent-%COMP%] > h3[_ngcontent-%COMP%]{font-size:25px}.chat-com-usuarios[_ngcontent-%COMP%]{background-color:#fff;border:1px solid var(--cor-de-fundo);border-radius:5px;width:100%}.info-usuario-chat[_ngcontent-%COMP%]{column-gap:10px;padding:0 5px 0 20px;flex-grow:1}.espaco-msg[_ngcontent-%COMP%]{padding:10px}.espaco-msg-foto[_ngcontent-%COMP%]{column-gap:5px}.img-perfil[_ngcontent-%COMP%]{width:45px;height:45px;border-radius:35px}.header-modal-align[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr 1fr}.chats[_ngcontent-%COMP%]{padding:10px 15px;overflow:auto;height:55vh}.card[_ngcontent-%COMP%]{border:none;border-radius:15px}.form-control[_ngcontent-%COMP%]{border-radius:12px;border:1px solid #F0F0F0;font-size:8px}.form-control[_ngcontent-%COMP%]:focus{box-shadow:none}.form-control[_ngcontent-%COMP%]::placeholder{font-size:8px;color:#c4c4c4}.formulario-comentario[_ngcontent-%COMP%]{margin-top:15px;border-top:1px solid rgb(0 0 0 / 13%)}.formulario-comentario[_ngcontent-%COMP%]{display:flex}.form-control[_ngcontent-%COMP%]{padding-top:15px;padding-bottom:15px;border-left:none;border-bottom:none}.texto-input[_ngcontent-%COMP%]{font-size:16px}.texto-input[_ngcontent-%COMP%]::placeholder{font-size:16px}.top-40[_ngcontent-%COMP%]{top:40%}@media screen and (max-width: 1024px){.card-chat[_ngcontent-%COMP%]{padding:30px 15vw}}@media screen and (max-width: 768px){.card-chat[_ngcontent-%COMP%]{padding:0}.chats[_ngcontent-%COMP%]{overflow:auto;height:calc(100vh - 150px);max-height:none;min-height:none;padding:20px 15px 50px}.chat-com-usuarios[_ngcontent-%COMP%]{background-color:#fff;border:none;border-radius:0;width:100%}.chat-username-usuario[_ngcontent-%COMP%]{font-size:15px}.chat-ultima-mensagem[_ngcontent-%COMP%]{font-size:11px}.horario-envio-mensagem[_ngcontent-%COMP%]{font-size:9px}.enviar-mensagens[_ngcontent-%COMP%]{position:absolute;background-color:#fff;bottom:0;right:0;left:0}}@media screen and (max-width: 350px){.card-topo[_ngcontent-%COMP%]{padding:20px 0;text-align:center;border-bottom:1px solid var(--cor-de-fundo)}.menor[_ngcontent-%COMP%], .chat-username-usuario[_ngcontent-%COMP%]{font-size:11px}.chat-ultima-mensagem[_ngcontent-%COMP%]{font-size:10px}.horario-envio-mensagem[_ngcontent-%COMP%]{font-size:8px}}\"]\n  });\n  return ChatMensagemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}