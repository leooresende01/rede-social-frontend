{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { SeguidoresSeguindoUtil } from 'src/core/util/seguidores-seguindo.util';\nimport { LoginForm } from './../../../core/dto/login-form';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/core/service/login.service\";\nimport * as i3 from \"./../../../core/service/user-authenticate.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../signup/validators/validators.component\";\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nconst _c2 = function () {\n  return [\"home\"];\n};\n\nconst _c3 = function () {\n  return [\"/signup\"];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, loginService, userAuthenticateService, activateRoute) {\n      this.formBuilder = formBuilder;\n      this.loginService = loginService;\n      this.userAuthenticateService = userAuthenticateService;\n      this.activateRoute = activateRoute;\n    }\n\n    ngOnInit() {\n      window.localStorage.clear();\n      this.nextUrl = this.activateRoute.snapshot.queryParams['nextUrl'];\n      this.form = this.formBuilder.group({\n        username: ['', [Validators.minLength(8), Validators.maxLength(20), Validators.pattern(/^[a-zA-Z0-9\\.]+$/), Validators.required]],\n        password: ['', [Validators.minLength(8), Validators.maxLength(20), Validators.required]]\n      });\n    }\n\n    autenticarUsuario() {\n      this.submitedForm = true;\n      this.serverMessage = '';\n      const username = this.pegarValorDoInput('username');\n      const password = this.pegarValorDoInput('password');\n      const loginForm = new LoginForm(username, password);\n      this.loginService.autenticarUsuario(loginForm).subscribe(tokenDto => this.userAuthenticateService.autenticarEIrParaAHome(tokenDto, username, this.nextUrl), err => this.serverMessage = err.error.mensagem);\n    }\n\n    pegarValorDoInput(inputName) {\n      return this.form.get(inputName)?.value;\n    }\n\n    ngOnDestroy() {\n      setTimeout(() => window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      }), 1);\n      SeguidoresSeguindoUtil.desativarObservable(this.queriesParamsSubscription);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.UserAuthenticateService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 33,\n    vars: 20,\n    consts: [[1, \"section-login\"], [1, \"card\", \"card-login\"], [1, \"form-login\", 3, \"formGroup\", \"submit\"], [1, \"input-group\", \"has-validation\"], [1, \"input-group-text\"], [1, \"form-floating\", 3, \"ngClass\"], [\"id\", \"inputUsername\", \"formControlName\", \"username\", \"type\", \"text\", \"id\", \"username\", \"placeholder\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"username\"], [\"inputName\", \"username\", 3, \"formGroup\"], [1, \"form-floating\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"password\"], [\"inputName\", \"password\", 3, \"formGroup\"], [\"type\", \"submit\", \"value\", \"Entrar\", 1, \"form-submit\", \"clicavel\", 3, \"routerLink\", \"disabled\"], [1, \"err-server\"], [1, \"create-div-ou\"], [1, \"alinhado-centro\", \"sem-decoracao\", \"clicavel\"], [1, \"card\", \"card-criar-conta\"], [1, \"alinhado-centro\"], [1, \"sem-decoracao\", \"clicavel\", 3, \"routerLink\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Rede social\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_4_listener() {\n          return ctx.autenticarUsuario();\n        });\n        i0.ɵɵelementStart(5, \"fieldset\", 3)(6, \"span\", 4);\n        i0.ɵɵtext(7, \"@\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Nome de usu\\u00E1rio\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(12, \"rs-validators\", 8);\n        i0.ɵɵelementStart(13, \"fieldset\", 9);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Senha\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"rs-validators\", 12)(18, \"input\", 13);\n        i0.ɵɵelementStart(19, \"p\", 14);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 15);\n        i0.ɵɵelement(22, \"div\");\n        i0.ɵɵelementStart(23, \"p\");\n        i0.ɵɵtext(24, \"OU\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"a\", 16);\n        i0.ɵɵtext(27, \"Esque\\u00E7eu a senha?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 17)(29, \"p\", 18);\n        i0.ɵɵtext(30, \"N\\u00E3o tem uma conta? \");\n        i0.ɵɵelementStart(31, \"a\", 19);\n        i0.ɵɵtext(32, \"Cadastre-se\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ((tmp_1_0 = ctx.form.get(\"username\")) == null ? null : tmp_1_0.errors) && ctx.submitedForm));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c1, ((tmp_2_0 = ctx.form.get(\"username\")) == null ? null : tmp_2_0.errors) && ctx.submitedForm, !((tmp_2_0 = ctx.form.get(\"username\")) == null ? null : tmp_2_0.errors) && ctx.submitedForm));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(15, _c1, ((tmp_4_0 = ctx.form.get(\"password\")) == null ? null : tmp_4_0.errors) && ctx.submitedForm, !((tmp_4_0 = ctx.form.get(\"password\")) == null ? null : tmp_4_0.errors) && ctx.submitedForm));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(18, _c2))(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.serverMessage);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(19, _c3));\n      }\n    },\n    dependencies: [i5.NgClass, i4.RouterLink, i4.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.ValidatorsComponent],\n    styles: [\".err-server[_ngcontent-%COMP%]{font-size:13px;color:#dc3545;text-align:center;margin-bottom:7px}\", \".section-login[_ngcontent-%COMP%]{padding:50px 33vw}.card[_ngcontent-%COMP%]{border:1px solid var(--cor-de-fundo);background-color:#fff}.card-login[_ngcontent-%COMP%]{padding:20px 4vw}.card-login[_ngcontent-%COMP%] > h1[_ngcontent-%COMP%]{padding:30px 0;font-family:unset,sans-serif;font-size:45px;text-align:center}.form-login[_ngcontent-%COMP%]{padding-top:30px;display:flex;flex-direction:column;row-gap:10px}.fildset[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;grid-template-rows:1fr}.mesmo-lugar-grid[_ngcontent-%COMP%]{grid-column:1;grid-row:1}.place-holder-top[_ngcontent-%COMP%]{font-size:12px;margin-top:3px;margin-left:10px}.form-input[_ngcontent-%COMP%]{background-color:#e9e9e957;outline:none;border:1px solid var(--cor-de-fundo);padding:17px 5px 5px 10px;border-radius:4px;grid-column:1;grid-row:1}.form-input[_ngcontent-%COMP%]:focus{border-color:#000}.form-input[_ngcontent-%COMP%]::placeholder{font-size:14px}.form-submit[_ngcontent-%COMP%]{background-color:#0095f6;color:#fff;border:none;transition:.3s;padding:10px;border-radius:4px}.form-submit[_ngcontent-%COMP%]:hover{background-color:#0069af}.form-submit[_ngcontent-%COMP%]:disabled{cursor:default;background-color:#0094f69a}.create-div-ou[_ngcontent-%COMP%]{margin:25px 0;display:flex;justify-content:space-between;align-items:center;column-gap:5px}.create-div-ou[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:#00000056;height:1px;width:100%}.create-div-ou[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{padding:0 10px}.alinhado-centro[_ngcontent-%COMP%]{display:block;text-align:center}.sem-decoracao[_ngcontent-%COMP%]{text-decoration:none}.sem-decoracao[_ngcontent-%COMP%]:hover{text-decoration:underline}.card-criar-conta[_ngcontent-%COMP%]{margin-top:20px;padding:20px 25px}.form-control[_ngcontent-%COMP%]:focus{box-shadow:inset 0 1px 1px #2124da13,0 0 3px #f009}@media screen and (max-width: 1024px){.section-login[_ngcontent-%COMP%]{padding:50px 26vw}}@media screen and (max-width: 754px){.section-login[_ngcontent-%COMP%]{padding:50px 18vw}.alinhado-centro[_ngcontent-%COMP%]{font-size:13px}.form-submit[_ngcontent-%COMP%]{padding:8px 0}}@media screen and (max-width: 500px){.section-login[_ngcontent-%COMP%]{padding:50px 9vw}.card-login[_ngcontent-%COMP%] > h1[_ngcontent-%COMP%]{font-size:35px}.place-holder-top[_ngcontent-%COMP%]{font-size:10px}.form-input[_ngcontent-%COMP%]::placeholder{font-size:12px}.form-submit[_ngcontent-%COMP%]{padding:10px 0}}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}