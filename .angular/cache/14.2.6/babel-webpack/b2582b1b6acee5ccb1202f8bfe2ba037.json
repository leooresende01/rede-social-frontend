{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { catchError, throwError } from 'rxjs';\nimport { Alert } from 'src/model/alert';\nimport { AlertType } from 'src/model/alert-type';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../service/publicacao.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../observable/alert.service\";\nexport let PublicacaoResolve = /*#__PURE__*/(() => {\n  class PublicacaoResolve {\n    constructor(publicacaoService, router, alertService) {\n      this.publicacaoService = publicacaoService;\n      this.router = router;\n      this.alertService = alertService;\n    }\n\n    resolve(route, state) {\n      const usuarioUsername = route.params['username'];\n      return this.publicacaoService.buscarPublicacoesDoUsuario(usuarioUsername).pipe(catchError(error => {\n        if (error.status === 404) {\n          this.router.navigate(['/not-found']);\n        }\n\n        this.alertService.nextValue(new Alert(error.error.mensagem, AlertType.DANGER));\n        return throwError(error);\n      }));\n    }\n\n  }\n\n  PublicacaoResolve.ɵfac = function PublicacaoResolve_Factory(t) {\n    return new (t || PublicacaoResolve)(i0.ɵɵinject(i1.PublicacaoService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AlertService));\n  };\n\n  PublicacaoResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PublicacaoResolve,\n    factory: PublicacaoResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return PublicacaoResolve;\n})();","map":null,"metadata":{},"sourceType":"module"}