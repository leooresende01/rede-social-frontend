{"ast":null,"code":"import { AlertType } from 'src/model/alert-type';\nimport { Alert } from 'src/model/alert';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/usuario.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../observable/alert.service\";\nexport let UsuarioPerfilResolve = /*#__PURE__*/(() => {\n  class UsuarioPerfilResolve {\n    constructor(usuarioService, router, alertService) {\n      this.usuarioService = usuarioService;\n      this.router = router;\n      this.alertService = alertService;\n    }\n\n    resolve(route, state) {\n      const username = route.params['username'];\n      return this.usuarioService.buscarUsuarioPeloUsername(username).pipe(catchError(error => {\n        if (error.status === 404) {\n          this.router.navigate(['/not-found']);\n        }\n\n        this.alertService.nextValue(new Alert(error.error.mensagem, AlertType.DANGER));\n        return throwError(error);\n      }));\n    }\n\n  }\n\n  UsuarioPerfilResolve.ɵfac = function UsuarioPerfilResolve_Factory(t) {\n    return new (t || UsuarioPerfilResolve)(i0.ɵɵinject(i1.UsuarioService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AlertService));\n  };\n\n  UsuarioPerfilResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioPerfilResolve,\n    factory: UsuarioPerfilResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioPerfilResolve;\n})();","map":null,"metadata":{},"sourceType":"module"}